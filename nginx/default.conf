upstream multiple_auth_api {
    server multiple-auth-api:8080;
}

upstream ui_react {
    server ui-react:3002;
}

server {
    listen 80;
    server_name localhost;
    client_max_body_size 100M;

    # Root location for UI
    location / {
        proxy_pass          http://ui_react;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
        proxy_buffering     off;
        proxy_http_version  1.1;
    }

    # Authentication routes
    location /auth/ {
        proxy_pass          http://multiple_auth_api;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # OAuth2 routes
    location /oauth2/ {
        proxy_pass          http://multiple_auth_api;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # API routes
    location /api/ {
        proxy_pass          http://multiple_auth_api;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # User routes
    location /user/ {
        proxy_pass          http://multiple_auth_api;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        access_log off;
        return 200 "healthy\n";
    }
} 